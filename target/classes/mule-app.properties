# JDBC connection for TSA DB. 
jdbc.d.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver

#UAT
jdbc.d.select.url=jdbc:sqlserver://172.31.24.93:54452;databaseName=TSA_APS;instance=sql2014
jdbc.d.select.username=mtc_user
jdbc.d.select.password=Pune201%
#
#jdbc.d.insert.url=jdbc:sqlserver://172.31.24.93:54452;databaseName=BI_REPORTS_UAT;instance=sql2014
#jdbc.d.insert.username=apsadmin
#jdbc.d.insert.password=AWSAdmin
#
jdbc.d.select.UAT.url=jdbc:sqlserver://10.65.1.8:1433;databaseName=tp2;
jdbc.d.select.UAT.username=tp2
jdbc.d.select.UAT.password=SabaPassw0rd
#
jdbc.d.select.MTC2.url=jdbc:mysql://uat-mtc2-db.c6r6d9t1lkce.ap-southeast-1.rds.amazonaws.com:3306/mtc
jdbc.d.select.MTC2.username=mtcdbadmin
jdbc.d.select.MTC2.password=mRTGJ8kC

##PROD
#jdbc.d.select.url=jdbc:sqlserver://MTC-DB;databaseName=TSA_APS;instance=sql2014
#jdbc.d.select.username=mtc_user_readonly
#jdbc.d.select.password=Poiu)987
#
#jdbc.d.insert.url=jdbc:sqlserver://prd-bi-db.c6r6d9t1lkce.ap-southeast-1.rds.amazonaws.com:1433;databaseName=BI_REPORTS_PROD;instance=sql2014
#jdbc.d.insert.username=bi_etl
#jdbc.d.insert.password=2Q3WLkrq
#
#jdbc.d.select.UAT.url=jdbc:sqlserver://saba.tsaasia.local;databaseName=tp2;
#jdbc.d.select.UAT.username=tp2
#jdbc.d.select.UAT.password=SabaPassw0rd
#
#jdbc.d.select.MTC2.url=jdbc:mysql://mtc-db.c6r6d9t1lkce.ap-southeast-1.rds.amazonaws.com:3306/mtc
#jdbc.d.select.MTC2.username=read_only
#jdbc.d.select.MTC2.password=ReadOnly123
#
##UAT RDS
jdbc.d.insert.url=jdbc:sqlserver://uat-bi-db-etl.c6r6d9t1lkce.ap-southeast-1.rds.amazonaws.com:1433;databaseName=BI_REPORTS_UAT;instance=sql2014
jdbc.d.insert.username=bi_etl
jdbc.d.insert.password=2Q3WLkrq


# Scheduled Cron jobs to pull date from source.
# to generate Cron string visit http://www.cronmaker.com/
# 2AM job = 0 0 2 1/1 * ? *
# every hour job = 0 0 0/1 1/1 * ? *
# every 5 Min job = 0 0/05 * 1/1 * ? *

quartz.tsa=0 17 17 * * ?

tsa.query.count=11

tsa.query.offset=0
tsa.query.limit=75000

tsa.file.location=D:\\BI\\TSA_file\\BATCH1
tsa.file.copy.location=D:\\BI\\TSA_file\\COPY_FILE
tsa.file.email.location=D:\\BI\\TSA_file\\EMAIL_CONTENT

tsa.file.salesRevenue.location=D:\\BI\\TSA_file\\SalesRevenue

#Notification email properties
tsa.email.to=dilip.kaushalye@tsa-solutions.com,vikas.yadav@tsa-solutions.com,monalisa.dusane@tsa-solutions.com,chamila.w@tsa-solutions.com
tsa.email.from=mtc.notifications@tsa-solutions.com
tsa.email.host=smtp.office365.com
tsa.email.port=587
tsa.email.username=mtc.notifications@tsa-solutions.com
tsa.email.password=Waxo0533
tsa.email.subject=[UAT]BI-ETL Job Failure - Batch1 failed


#DB Queries

tsa.select.1=SELECT  DISTINCT hotel.HotelID,hotel.HotelName,hotel.HotelCode,hotel.Country,hotel.City,hotel.Region,hotel.TotalRooms,hotel.BillingCurr,hotel.Brand,hotel.Territory,hotel.CorpName as chain ,hotel.rptCurr,hotel.SubRegion,ActivationDate,RptEndDate AS DeActivationDate, REPLACE(LEFT(hotel.HotelCode, CHARINDEX('~',hotel.HotelCode)-1),'_',' ') as HotelCodeAct,InitialOwner,PGMowner,BusinessSUpp,PkgCodeCurr as PackagecodeCurrency,RevCurr as RevenueCurrency,account.id as accountId FROM TSA_APS.DBO.T_MAS_HOTEL hotel  LEFT JOIN ( SELECT name,max(id) as id FROM TSA_CRM.dbo.account GROUP BY name HAVING COUNT(name) = 1) account ON	account.name=hotel.HotelName ORDER BY HOTEL.HOTELID ASC OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY
tsa.select.table.1=T_MAS_HOTEL
tsa.insert.1=INSERT INTO T_DIM_HOTEL(HotelID ,Name ,Code ,Country ,City ,Region ,Rooms ,BillingCurrency, Brand  ,Territory ,Chain,ReportingCurrency ,SubRegion,ActivationDate ,DeActivationDate,HotelCode,InitialOwner,PGMowner,BusinessSUpp,PackagecodeCurrency,RevenueCurrency,accountID,RunID) VALUES(#[payload.HotelID],#[payload.HotelName],#[payload.HotelCode],#[payload.Country],#[payload.City],#[payload.Region],#[payload.TotalRooms],#[payload.BillingCurr],#[payload.Brand],#[payload.Territory],#[payload.Chain],#[payload.rptCurr],#[payload.SubRegion],#[payload.ActivationDate],#[payload.DeActivationDate],#[payload.HotelCodeAct],#[payload.InitialOwner],#[payload.PGMowner],#[payload.BusinessSUpp],#[payload.PackagecodeCurrency],#[payload.RevenueCurrency],#[payload.accountId], #[flowVars.tableRunID])
tsa.insert.table.1=T_DIM_HOTEL
tsa.insert.dbtype.1=bi-report
tsa.insert.operationtype.1=truncate
tsa.db.flag.1=MS

tsa.select.2=select distinct hotelid,city,cast(cast(year(Effectivestartdate) as nvarchar)+''+cast(FORMAT(Effectivestartdate,'MM') as nvarchar)+''+cast(FORMAT(Effectivestartdate,'dd') as nvarchar) as int) as Effectivestartdate, cast(cast(year(dateadd(day,min(datecount)-1,Effectivestartdate)) as nvarchar)+''+cast(FORMAT(dateadd(day,min(datecount)-1,Effectivestartdate),'MM') as nvarchar)+''+cast(FORMAT(dateadd(day,min(datecount)-1,Effectivestartdate),'dd') as nvarchar) as int) as Effectiveenddate from ( select distinct A.hotelid,A.city,A.EffectiveDate as Effectivestartdate, datediff(day,A.EffectiveDate,Isnull(B.EffectiveDate,'2100-01-01')) as datecount from TSA_APS.DBO.T_Mas_CityAvgGrouping A Left Outer Join TSA_APS.DBO.T_Mas_CityAvgGrouping B on A.hotelid=B.hotelid and A.EffectiveDate<>B.EffectiveDate and A.EffectiveDate<B.EffectiveDate ) as C group by hotelid,city, Effectivestartdate order by 1,3 ASC OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY 
tsa.select.table.2=T_MAS_HOTEL
tsa.insert.2=INSERT INTO T_DIM_HOTEL_CITY_AVERAGE_GROUP( HotelID,City,Effectivestartdate,Effectiveenddate,Runid) VALUES(#[payload.HotelID],#[payload.City],#[payload.Effectivestartdate],#[payload.Effectiveenddate],#[flowVars.tableRunID])
tsa.insert.table.2=T_DIM_HOTEL_CITY_AVERAGE_GROUP
tsa.insert.dbtype.2=bi-report
tsa.insert.operationtype.2=truncate
tsa.db.flag.2=MS

tsa.select.3=SELECT Hotelid,MarketSegID,MarketSegmentType,MarketSegment FROM(SELECT DISTINCT A.Hotelid, cast(A.hotelid as nvarchar)+'_'+isnull(A.MarketSegment,'MISC') +'_'+case when Isnull(A.MarketSegmentType,0) =0 then '2' else A.MarketSegmentType end  AS MarketSegID, max(case when Isnull(A.MarketSegmentType,0) =0 then '2' else A.MarketSegmentType end) AS MarketSegmentType, max(isnull(A.MarketSegment,'MISC')) AS MarketSegment,ROW_NUMBER()OVER(ORDER BY A.Hotelid, cast(A.hotelid as nvarchar)+'_'+isnull(A.MarketSegment,'MISC') +'_'+case when Isnull(A.MarketSegmentType,0) =0 then '2' else A.MarketSegmentType end ASC)  AS offsetNo  FROM TSA_APS.DBO.T_TRN_APSCACHEDUPSELL A WHERE A.HotelID IS NOT NULL  group by A.Hotelid, cast(A.hotelid as nvarchar)+'_'+isnull(A.MarketSegment,'MISC') +'_'+case when Isnull(A.MarketSegmentType,0) =0 then '2' else A.MarketSegmentType end) AS RowNum WHERE  rowNum.offsetNo > $&& and rowNum.offsetNo <= $&&+$**
tsa.select.table.3=T_TRN_APSCACHEDUPSELL
tsa.insert.3=INSERT INTO T_DIM_HOTEL_MARKET_SEGMENT(HotelID,MarketSegID,MarketSegmentType,MarketSegment,RunID) VALUES(#[payload.Hotelid],#[payload.MarketSegID],#[payload.MarketSegmentType],#[payload.MarketSegment],#[flowVars.tableRunID])
tsa.insert.table.3=T_DIM_HOTEL_MARKET_SEGMENT
tsa.insert.dbtype.3=bi-report
tsa.insert.operationtype.3=truncate
tsa.db.flag.3=MS

tsa.select.4=SELECT max(pd.ROWID) AS HotelProductID,pd.ProductID as ProductID,max(pd.[PRODUCT NAME]) AS ProductName,max(pd.ProductNameID)  as ProductNameID,max(pp.Priority)  as Priority, max(pp.PartnershipType) as PartnershipType FROM TSA_APS.DBO.T_TRN_HOTELCONTRACTDETAILS pd  \
			INNER JOIN TSA_APS.DBO.T_MAS_ProductPartnership pp on pd.ProductNameID = pp.ProductNameID  group by ProductID  ORDER BY max(pd.ROWID),ProductID ASC OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY
tsa.select.table.4=T_TRN_HOTELCONTRACTDETAILS
tsa.insert.4=INSERT INTO T_DIM_HOTEL_PRODUCT(HotelProductID ,ProductName ,ProductNameID ,ProductID ,Priority ,PartnershipType,RunID) VALUES(#[payload.HotelProductID],#[payload.ProductName],#[payload.ProductNameID],#[payload.ProductID],#[payload.Priority],#[payload.PartnershipType],#[flowVars.tableRunID])
tsa.insert.table.4=T_DIM_HOTEL_PRODUCT
tsa.insert.dbtype.4=bi-report
tsa.insert.operationtype.4=truncate
tsa.db.flag.4=MS

tsa.select.5=SELECT  cast(A.hotelid as nvarchar) + '_' + A.RoomCode AS HotelRoomID, A.HotelID, A.RoomCode AS RoomCode, A.RoomName AS RoomName,A.RoomGrp AS RoomGrp,A.RoomCategory AS RoomCategory, A.NoRoom  AS NoRoom,A.EffectiveDate AS EffectiveDate \
			FROM  TSA_APS.DBO.T_TRN_HOTELROOM A where effectivedate >= (select max(effectivedate) from TSA_APS.DBO.T_TRN_HOTELROOM B where b.HotelID = a.HotelID and b.RoomCode = a.RoomCode)   ORDER BY cast(A.hotelid as nvarchar) + '_' + A.RoomCode ASC OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY 
tsa.select.table.5=T_TRN_HOTELROOM
tsa.insert.5=INSERT INTO T_DIM_HOTEL_ROOM(HotelRoomID,HotelID,RoomCode,RoomName,RoomGrp,RoomCategory,NoRoom,EffectiveDate,RunID) VALUES(#[payload.HotelRoomID],#[payload.HotelID],#[payload.RoomCode],#[payload.RoomName],#[payload.RoomGrp],#[payload.RoomCategory],#[payload.NoRoom],#[payload.EffectiveDate],#[flowVars.tableRunID])
tsa.insert.table.5=T_DIM_HOTEL_ROOM
tsa.insert.dbtype.5=bi-report
tsa.insert.operationtype.5=truncate
tsa.db.flag.5=MS

tsa.select.6=Select USR.UserID,USR.UserEmail,USR.UserRole,USR.[Status],USR.IsAllHotels,USR.IsAllModules from TSA_APS.DBO.T_MAS_USERS USR ORDER BY USR.HOTELID ASC OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY
tsa.select.table.6=T_MAS_HOTEL
tsa.insert.6=INSERT INTO T_DIM_USER([UserID],[UserEmail],[UserRole],[Status],[IsAllHotels],[IsAllModules],[Runid]) VALUES(#[payload.UserID],#[payload.UserEmail],#[payload.UserRole],#[payload.Status],#[payload.IsAllHotels],#[payload.IsAllModules], #[flowVars.tableRunID])
tsa.insert.table.6=T_DIM_USER
tsa.insert.dbtype.6=bi-report
tsa.insert.operationtype.6=truncate
tsa.db.flag.6=MS

tsa.select.7=select Distinct A.id AS OpportunityID , sugar_opportunity_id AS sugar_opportunity_id ,A.name AS OpportunityName ,commencement_date AS Contractstartdate ,contract_end_date AS ContractEndDate ,cap_exchange_rate AS CapExchangeRate ,billing_currency AS BillingCurrency ,amount AS Amount ,program_type AS ProgramType ,program AS Program, stage_name AS StageName ,renewal_opportunity AS RenewalOpportunity ,product_name_id AS ProductNameId ,A.owner_id AS OwnerId ,program_owner AS ProgramOwner ,partner_services AS PartnerServices ,performance_consultant AS PerformanceConsultant ,pms_type AS PmsType ,offering_type AS OfferingType ,viability AS Viability ,logistics_currency AS LogisticsCurrency ,logistics_fee_amount AS LogisticsFeeAmount ,logistics_fee_terms AS LogisticsFeeTerms ,e_invoice AS EInvoice ,learning_type AS LearningType ,probability AS Probability ,guarantee_base_value AS GuaranteeBaseValue ,guarantee_base_cur AS GuaranteeBaseCur ,guarantee_incremental AS GuaranteeIncremental ,guarantee_incremental_cur AS GuaranteeIncrementalCur ,guarantee_minimum AS GuaranteeMinimum ,guarantee_minimum_cur AS GuaranteeMinimumCur ,consulting_fee_per_day AS ConsultingFeePerDay ,withholding_tax AS WithholdingTax ,tsa_legal_entity AS TsaLegalEntity ,B.id AS Accountid ,B.name AS HotelName ,B.owner_id AS AccountOwnerID , chain AS Chain ,brand AS Brand ,type AS Type ,status AS Status ,city AS City ,state AS State ,country AS Country ,region AS Region ,sub_region AS SubRegion ,territory AS Territory ,affiliation AS Affiliation ,management_company AS ManagementCompany ,franchise AS Franchise ,0 AS ProductId ,'' AS Name ,'' AS Family,A.bill_type AS BillType, B.owner_name as AccountOwnerName from TSA_CRM.DBO.opportunity A Inner Join TSA_CRM.DBO.account B on A.account_id=B.id ORDER BY A.id, A.commencement_date ASC OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY
tsa.select.table.7=T_TRN_HOTELROOM
tsa.insert.7=INSERT INTO T_FACT_CRM_OPPORTUNITY(OpportunityID ,sugar_opportunity_id ,OpportunityName ,Contractstartdate ,ContractEndDate ,CapExchangeRate ,BillingCurrency ,Amount ,ProgramType ,Program, StageName ,RenewalOpportunity ,ProductNameId ,OwnerId ,ProgramOwner ,PartnerServices ,PerformanceConsultant ,PmsType ,OfferingType ,Viability ,LogisticsCurrency ,LogisticsFeeAmount ,LogisticsFeeTerms ,EInvoice ,LearningType ,Probability ,GuaranteeBaseValue ,GuaranteeBaseCur ,GuaranteeIncremental ,GuaranteeIncrementalCur ,GuaranteeMinimum ,GuaranteeMinimumCur ,ConsultingFeePerDay ,WithholdingTax ,TsaLegalEntity ,Accountid ,HotelName ,AccountOwnerID ,Chain ,Brand ,Type ,Status ,City ,State ,Country ,Region ,SubRegion ,Territory ,Affiliation ,ManagementCompany ,Franchise ,ProductID,ProductName ,Family, BillType, AccountOwnerName, RunID) VALUES(#[payload.OpportunityID],#[payload.sugar_opportunity_id],#[payload.OpportunityName],#[payload.Contractstartdate],#[payload.ContractEndDate],#[payload.CapExchangeRate],#[payload.BillingCurrency],#[payload.Amount],#[payload.ProgramType],#[payload.Program],#[payload.StageName],#[payload.RenewalOpportunity],#[payload.ProductNameId],#[payload.OwnerId],#[payload.ProgramOwner],#[payload.PartnerServices],#[payload.PerformanceConsultant],#[payload.PmsType],#[payload.OfferingType],#[payload.Viability],#[payload.LogisticsCurrency],#[payload.LogisticsFeeAmount],#[payload.LogisticsFeeTerms],#[payload.EInvoice],#[payload.LearningType],#[payload.Probability],#[payload.GuaranteeBaseValue],#[payload.GuaranteeBaseCur],#[payload.GuaranteeIncremental],#[payload.GuaranteeIncrementalCur],#[payload.GuaranteeMinimum],#[payload.GuaranteeMinimumCur],#[payload.ConsultingFeePerDay],#[payload.WithholdingTax],#[payload.TsaLegalEntity],#[payload.Accountid],#[payload.HotelName],#[payload.AccountOwnerID],#[payload.Chain],#[payload.Brand],#[payload.Type],#[payload.Status],#[payload.City],#[payload.State],#[payload.Country],#[payload.Region],#[payload.SubRegion],#[payload.Territory],#[payload.Affiliation],#[payload.ManagementCompany],#[payload.Franchise],#[payload.ProductId],#[payload.Name],#[payload.Family],#[payload.BillType],#[payload.AccountOwnerName],#[flowVars.tableRunID])
tsa.insert.table.7=T_FACT_CRM_OPPORTUNITY
tsa.insert.dbtype.7=bi-report
tsa.insert.operationtype.7=truncate
tsa.db.flag.7=MS

#tsa.select.8=SELECT cast(cast(year(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0)) as nvarchar)+''+cast(FORMAT(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0),'MM') as nvarchar)+''+cast(FORMAT(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0),'dd') as nvarchar) as int) as DateID, TargetCurr,SourceCurr, max(Rate) AS Rate from TSA_APS.dbo.T_Mas_ExchangeRate WHERE Date  $>  (select cast( cast(year('${1}') as nvarchar)+ format(cast('${1}' as date),'MM')+ '01' as date)) AND Date <= '${2}'  GROUP BY  cast(cast(year(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0)) as nvarchar)+''+cast(FORMAT(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0),'MM') as nvarchar)+''+cast(FORMAT(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0),'dd') as nvarchar) as int), TargetCurr, SourceCurr ORDER BY cast(cast(year(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0)) as nvarchar)+''+cast(FORMAT(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0),'MM') as nvarchar)+''+cast(FORMAT(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0),'dd') as nvarchar) as int), TargetCurr, SourceCurr  OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY
tsa.select.8=SELECT cast(cast(year(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0)) as nvarchar)+''+cast(FORMAT(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0),'MM') as nvarchar)+''+cast(FORMAT(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0),'dd') as nvarchar) as int) as DateID, TargetCurr,SourceCurr, max(dbo.F_ApplyGenericExchangeRate(sourcecurr,targetcurr,1,cast( cast(year(A.date) as nvarchar)+ format(cast(A.date as date),'MM')+ '01' as date))) AS Rate from TSA_APS.dbo.T_Mas_ExchangeRate A WHERE Date  $>  (select cast( cast(year('${1}') as nvarchar)+ format(cast('${1}' as date),'MM')+ '01' as date)) AND Date <= '${2}'  GROUP BY  cast(cast(year(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0)) as nvarchar)+''+cast(FORMAT(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0),'MM') as nvarchar)+''+cast(FORMAT(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0),'dd') as nvarchar) as int), TargetCurr, SourceCurr ORDER BY cast(cast(year(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0)) as nvarchar)+''+cast(FORMAT(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0),'MM') as nvarchar)+''+cast(FORMAT(DATEADD(MONTH,DATEDIFF(MONTH,0,[date]),0),'dd') as nvarchar) as int), TargetCurr, SourceCurr  OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY
tsa.select.table.8=FACTTABLE
tsa.insert.8=INSERT INTO T_FACT_EXC_RATE(DateID,TargetCurr,SourceCurr,Rate,RunID) \
			VALUES(#[payload.DateID],#[payload.TargetCurr],#[payload.SourceCurr],#[payload.Rate],#[flowVars.tableRunID])
tsa.insert.table.8=T_FACT_EXC_RATE
tsa.insert.dbtype.8=bi-report
tsa.insert.operationtype.8=incremental
tsa.delete.query.8=delete  from T_FACT_EXC_RATE where DateID >= (select cast( cast(year('$date') as nvarchar)+ format(cast('$date' as date),'MM')+ '01' as int))
tsa.db.flag.8=MS

tsa.select.9=SELECT HotelID,DateID,TotalUpsellRev,ForecastData FROM( SELECT isnull(APS.HotelID,fst.HotelID) AS HotelID, isnull(APS.DateID,fst.DateID) as DateID,APS.TotalUpsellRev,FST.ForecastData FROM ( SELECT  A.Hotelid, cast(cast(year(A.PeriodDate) as nvarchar)+''+cast(FORMAT(A.PeriodDate,'MM') as nvarchar)+'01' as int) as DateID, Sum(TotalUpsellRev) AS TotalUpsellRev FROM TSA_APS.DBO.T_TRN_APSCACHING A INNER JOIN T_DIM_BI_EXTRACT d ON a.hotelid=d.hotelid and (LEFT(DateName( month ,cast(A.PeriodDate as varchar)),3) +'-'+CAST(year(cast(A.PeriodDate as varchar)) as varchar))=d.keyIdentifier WHERE d.destinationtable='T_FACT_FORECAST' and d.CompletionFlag=0 AND d.CreatedDate <=  MAX_CREATED_DATE and a.HotelID is not null GROUP BY A.HotelID,cast(cast(year(A.PeriodDate) as nvarchar)+''+cast(FORMAT(A.PeriodDate,'MM') as nvarchar)+'01' as int) ) APS full outer JOIN (SELECT  b.Hotelid, cast(cast(year(B.PeriodDate) as nvarchar)+''+cast(FORMAT(B.PeriodDate,'MM') as nvarchar)+'01' as int) as DateID, sum(ForecastData)  as ForecastData FROM TSA_APS.DBO.W_T_Fin_TSA09Forecast B INNER JOIN T_DIM_BI_EXTRACT e ON B.hotelid=e.hotelid and (LEFT(DateName( month ,cast(B.PeriodDate as varchar)),3) +'-'+CAST(year(cast(B.PeriodDate as varchar)) as varchar))=e.keyIdentifier WHERE e.destinationtable='T_FACT_FORECAST' and e.CompletionFlag=0 AND e.CreatedDate <=  MAX_CREATED_DATE AND b.ForecastPropID = 18 and b.HotelID is not null GROUP BY B.HotelID,cast(cast(year(B.PeriodDate) as nvarchar)+''+cast(FORMAT(B.PeriodDate,'MM') as nvarchar)+'01' as int) ) FST on APS.HotelID = FST.HotelID AND APS.DateID = FST.DateID ) AS FORECAST ORDER BY HotelID, DateID ASC OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY
tsa.select.table.9=FACTTABLE
tsa.insert.9=INSERT INTO T_FACT_FORECAST(HotelID ,DateID ,TotalUpsellRev ,ForecastData,RunID) VALUES(#[payload.Hotelid],#[payload.DateID],#[payload.TotalUpsellRev],#[payload.ForecastData],#[flowVars.tableRunID])
tsa.insert.table.9=T_FACT_FORECAST
tsa.insert.table.date.check.9=A.PERIODDATE
tsa.insert.table.date.9=2017-02-01
tsa.insert.dbtype.9=bi-report
tsa.insert.operationtype.9=incremental
tsa.delete.query.9=delete  rs from T_FACT_FORECAST  rs inner join  T_DIM_BI_EXTRACT e on (LEFT(DateName( month ,cast(dateid as varchar)),3) +'-'+CAST(year(cast(dateid as varchar)) as varchar))=e.keyidentifier and rs.hotelid=e.hotelid WHERE e.destinationtable='T_FACT_FORECAST'
tsa.db.flag.9=MS

tsa.select.10=SELECT DISTINCT HCT.HOTELID AS HotelID, ISNULL(HCT.PRODUCTNAMEID, 0) AS ProductID, HCT.[Product Name] AS ProductName, ISNULL(HCT.CONTRACTSTARTDATE, Cast(Dateadd(YEAR, -1, HT.RPTENDDATE)AS DATE)) AS ContractStartDate, ISNULL(HCT.CONTRACTENDDATE, HT.RPTENDDATE) AS ContractEndDate, PT.PARTNERSHIPTYPE, EARNINGCAP, HCT.CHAIN, HCT.OPPORTUNITYID, HCT.QUANTITY, ISNULL(HCT.COMPTRNGQTY, 0) AS CompTrainingQuantity, SUM(ISNULL(ORH.REMOTEHOURS, 0)) AS RemoteContractedHours, SUM(ISNULL(ORH.REMOTEDAYS, 0))AS RemoteContractedDays, SUM(ISNULL(ORH.MONITORHOURS, 0)) AS MonitorHours, SUM(ISNULL(ORH.MONITORDAYS, 0))AS MonitorDays, SUM(ISNULL(ORH.ONSITETRAININGHOURS, 0)) AS OnsiteTrainingHours, SUM(ISNULL(ORH.ONSITETRAININGDAYS, 0))AS OnsiteTrainingDays, SUM(ISNULL(ORH.ONSITECONSULTINGHOURS, 0)) AS OnsiteConsultingHours, SUM(ISNULL(ORH.ONSITECONSULTINGDAYS, 0))AS OnsiteConsultingDays, ISNULL(SUM(DOA.ADJUSTMENTHRS), 0) AS QuantityAdjustedHrs, ISNULL(SUM(DOA.ADJUSTMENTHRS) / 8, 0) AS QuantityAdjusted, ISNULL(STUFF( (SELECT '; ' + isnull(DOB.AdjustmentReasons, '') FROM T_MAS_DAYSOWEDADJUSTMENTS DOB WHERE HCT.OPPORTUNITYID = DOB.OPPORTUNITYID AND HCT.PRODUCTID = DOB.PRODUCTID FOR XML PATH('')), 1, 1, ''), 'Not Available') AS AdjustmentReasons FROM TSA_APS.DBO.T_TRN_HOTELCONTRACTDETAILS HCT INNER JOIN TSA_APS.DBO.T_MAS_HOTEL HT ON HCT.HOTELID = HT.HOTELID INNER JOIN T_MAS_PRODUCTPARTNERSHIP PT ON HCT.PRODUCTNAMEID = PT.PRODUCTNAMEID LEFT JOIN TSA_APS.DBO.T_TRN_OPPREMOTEHOURS ORH ON hct.OpportunityID= ORH.opportunity_id LEFT JOIN TSA_APS.DBO.T_MAS_DAYSOWEDADJUSTMENTS DOA ON HCT.OPPORTUNITYID = DOA.OPPORTUNITYID AND HCT.PRODUCTID = DOA.PRODUCTID and Product_name like '%'+DOA.productid+'%' and Product_name not like '%PPM%' WHERE HCT.Stage='Closed Won' GROUP BY HCT.HOTELID, HCT.PRODUCTNAMEID, CONTRACTSTARTDATE, CONTRACTENDDATE, HT.RptEndDate, PARTNERSHIPTYPE, EARNINGCAP, CHAIN, HCT.OPPORTUNITYID, HCT.QUANTITY, HCT.COMPTRNGQTY, PT.PRODUCTNAMEID, HCT.[Product Name], HCT.Productid ORDER BY HCT.HOTELID, ISNULL(HCT.PRODUCTNAMEID, 0), ISNULL(HCT.CONTRACTSTARTDATE, Cast(Dateadd(YEAR, -1, HT.RPTENDDATE)AS DATE)), ISNULL(HCT.CONTRACTENDDATE, HT.RPTENDDATE), EARNINGCAP, HCT.CHAIN, HCT.OPPORTUNITYID ASC  OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY
tsa.select.table.10=T_Trn_HotelContractDetails
tsa.insert.10=INSERT INTO T_FACT_HOTEL_CONTRACT(HotelID ,HotelProductID,ProductName ,ContractStartDate ,ContractEndDate,PartnershipType ,EarningCap ,Chain ,OpportunityID,Quantity,CompTrainingQuantity,RemoteContractedHours,RemoteContractedDays,MonitorHours,MonitorDays,OnsiteTrainingHours,OnsiteTrainingDays,OnsiteConsultingHours,OnsiteConsultingDays,QuantityAdjustedHrs,QuantityAdjusted,AdjustmentReasons,RunID) VALUES(#[payload.HotelID],#[payload.ProductID],#[payload.ProductName],#[payload.ContractStartDate],#[payload.ContractEndDate],#[payload.PartnershipType],#[payload.EarningCap],#[payload.Chain],#[payload.OpportunityID],#[payload.Quantity],#[payload.CompTrainingQuantity],#[payload.RemoteContractedHours],#[payload.RemoteContractedDays],#[payload.MonitorHours],#[payload.MonitorDays],#[payload.OnsiteTrainingHours],#[payload.OnsiteTrainingDays],#[payload.OnsiteConsultingHours],#[payload.OnsiteConsultingDays],#[payload.QuantityAdjustedHrs],#[payload.QuantityAdjusted],#[payload.AdjustmentReasons],#[flowVars.tableRunID])
tsa.insert.table.10=T_FACT_HOTEL_CONTRACT
tsa.insert.table.date.check.10=hct.ContractStartDate
tsa.insert.table.date.10=2016-01-21
tsa.insert.dbtype.10=bi-report
tsa.insert.operationtype.10=truncate
tsa.db.flag.10=MS

tsa.select.11=Select Hotelid,Userid from W_Trn_User_Hotels USR ORDER BY USR.HOTELID ASC OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY
tsa.select.table.11=T_MAS_HOTEL
tsa.insert.11=INSERT INTO T_FACT_USERHOTEL([Hotelid],[Userid],[Runid]) VALUES(#[payload.Hotelid],#[payload.Userid],#[flowVars.tableRunID])
tsa.insert.table.11=T_FACT_USERHOTEL
tsa.insert.dbtype.11=bi-report
tsa.insert.operationtype.11=truncate
tsa.db.flag.11=MS


